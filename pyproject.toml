[tool.poetry]
name = "pytorch-onnx-tutorial"
version = "0.1.0"
description = "Export a PyTorch model to ONNX format"
authors = ["Wooyeol Lee <wooyeol0519@snu.ac.kr>"]
readme = "README.md"
packages = [ { include = "onnx_tutorial" } ]

[tool.poetry.dependencies]
onnx = "^1.17.0"
onnxruntime = "^1.20.0"
onnxscript = "0.1.0.dev20241125"
python = "3.12.*"
torch = { version = "^2.5.0", source = "pypi" }
torchvision = { version = "^0.20.0", source = "pypi" }

[tool.poetry.dev-dependencies]
pre-commit = "^4.0.1"
pyright = "^1.1.389"

[tool.poetry.scripts]
export = "onnx_tutorial.export_to_onnx:export_to_onnx"
export_check = "onnx_tutorial.export_to_onnx:export_to_onnx_check"
execute = "onnx_tutorial.execute_with_ort:execute_with_ort"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
include = ["onnx_tutorial"]
exclude = ["**/__pycache__"]
reportMissingImports = "error"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Same as Black.
indent-width = 4
line-length = 88

target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = []
select = ["E4", "E7", "E9", "F", "I"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Ignore `F401` (unused-import) in all `__init__.py` files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
